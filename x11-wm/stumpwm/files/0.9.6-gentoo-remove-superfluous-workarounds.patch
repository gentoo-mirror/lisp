diff -Naur stumpwm-0.9.5.orig/workarounds.lisp stumpwm-0.9.5/workarounds.lisp
--- stumpwm-0.9.5.orig/workarounds.lisp	2008-10-21 23:07:48.000000000 +0200
+++ stumpwm-0.9.5/workarounds.lisp	2009-04-19 21:26:31.000000000 +0200
@@ -2,58 +2,6 @@
 
 (in-package :xlib)
 
-;;; SBCL workaround for a clx caching bug. This is taken from portable-clx's display.lisp.
-
-;;; NOTE! The latest clx in Rhodes' repository has fixed this is a far
-;;; better way by only caching XIDs created by the client.
-
-;; Define functions to find the CLX data types given a display and resource-id
-;; If the data type is being cached, look there first.
-#+sbcl
-(macrolet ((generate-lookup-functions (useless-name &body types)
-	    `(within-definition (,useless-name generate-lookup-functions)
-	       ,@(mapcar
-		   #'(lambda (type)
-		       `(defun ,(xintern 'lookup- type)
-			       (display id)
-			  (declare (type display display)
-				   (type resource-id id))
-			  (declare (clx-values ,type))
-			  ,(if (member type +clx-cached-types+)
-			       `(let ((,type (lookup-resource-id display id)))
-				  (cond ((null ,type) ;; Not found, create and save it.
-					 (setq ,type (,(xintern 'make- type)
-						      :display display :id id))
-					 (save-id display id ,type))
-					;; Found.  Check the type
-                                        ((type? ,type ',type) ,type)
-                                        (t 
-                                         (restart-case
-                                             (x-error 'lookup-error
-                                                      :id id
-                                                      :display display
-                                                      :type ',type
-                                                      :object ,type)
-                                           (:one ()
-                                             :report "Invalidate this cache entry"
-                                             (save-id display id (,(xintern 'make- type) :display display :id id)))
-                                           (:all ()
-                                             :report "Invalidate all display cache"
-                                             (clrhash (display-resource-id-map display))
-                                             (save-id display id (,(xintern 'make- type) :display display :id id)))))))
-			       ;; Not being cached.  Create a new one each time.
-			       `(,(xintern 'make- type)
-				 :display display :id id))))
-		   types))))
-  (generate-lookup-functions ignore
-    drawable
-    window
-    pixmap
-    gcontext
-    cursor
-    colormap
-    font))
-
 ;;; Both clisp and SBCL can't handle incompliant (and in clisp's case,
 ;;; even compliant) wm-class strings. See test-wm-class in test-wm.lisp.
 
